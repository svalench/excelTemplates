#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
"""

from advanced_report_generator import (
    AdvancedExcelRenderer, 
    create_complex_report_template,
    generate_sample_data,
    render_template_with_data
)
import pandas as pd
from datetime import datetime, timedelta
import random


def example_1_basic_complex_report():
    """–ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤—ã–π —Å–ª–æ–∂–Ω—ã–π –æ—Ç—á–µ—Ç"""
    print("\n" + "="*60)
    print("üìä –ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤—ã–π —Å–ª–æ–∂–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã–º–∏ —Å–µ–∫—Ü–∏—è–º–∏")
    print("="*60)
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
    template = create_complex_report_template()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    data = generate_sample_data()
    
    # –†–µ–Ω–¥–µ—Ä–∏–º —à–∞–±–ª–æ–Ω
    rendered_template = render_template_with_data(template, data)
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
    renderer = AdvancedExcelRenderer()
    workbook = renderer.create_collapsible_report(rendered_template)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    output_file = f"example_1_basic_complex_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
    renderer.save_report(output_file)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {output_file}")
    print("üìã –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
    print("  ‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω—ã")
    print("  ‚Ä¢ –°–µ–∫—Ü–∏—è '–ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º' —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞")
    print("  ‚Ä¢ –°–µ–∫—Ü–∏—è '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥—É–∫—Ç–æ–≤' —Å–≤–µ—Ä–Ω—É—Ç–∞")
    print("  ‚Ä¢ –ê–≤—Ç–æ—Ñ–∏–ª—å—Ç—Ä—ã –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö")
    print("  ‚Ä¢ –£—Å–ª–æ–≤–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    
    return output_file


def example_2_financial_dashboard():
    """–ü—Ä–∏–º–µ—Ä 2: –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\n" + "="*60)
    print("üí∞ –ü—Ä–∏–º–µ—Ä 2: –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    print("="*60)
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    financial_data = {
        "title": "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
        "subtitle": f"–û—Ç—á–µ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥: Q4 2024 | –°–æ–∑–¥–∞–Ω: {datetime.now().strftime('%d.%m.%Y %H:%M')}",
        "summary": {
            "total_revenue": 5200000,
            "total_expenses": 3800000,
            "net_profit": 1400000,
            "profit_margin": 26.9,
            "ebitda": 1650000,
            "cash_flow": 1200000
        },
        "sections": [
            {
                "title": "üíº –î–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –º–µ—Å—è—Ü–∞–º",
                "type": "table",
                "collapsed": False,
                "data": [
                    {"month": "–û–∫—Ç—è–±—Ä—å", "revenue": 1650000, "expenses": 1200000, "profit": 450000, "margin": 27.3},
                    {"month": "–ù–æ—è–±—Ä—å", "revenue": 1750000, "expenses": 1300000, "profit": 450000, "margin": 25.7},
                    {"month": "–î–µ–∫–∞–±—Ä—å", "revenue": 1800000, "expenses": 1300000, "profit": 500000, "margin": 27.8}
                ]
            },
            {
                "title": "üè¢ –ê–Ω–∞–ª–∏–∑ –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º",
                "type": "grouped_data",
                "collapsed": True,
                "groups": [
                    {
                        "title": "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
                        "collapsed": False,
                        "data": [
                            {"department": "–ü—Ä–æ–¥–∞–∂–∏", "budget": 800000, "actual": 750000, "variance": -6.3},
                            {"department": "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "budget": 600000, "actual": 580000, "variance": -3.3},
                            {"department": "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "budget": 1200000, "actual": 1250000, "variance": 4.2}
                        ]
                    },
                    {
                        "title": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
                        "collapsed": True,
                        "data": [
                            {"department": "HR", "budget": 400000, "actual": 380000, "variance": -5.0},
                            {"department": "IT", "budget": 500000, "actual": 520000, "variance": 4.0},
                            {"department": "–§–∏–Ω–∞–Ω—Å—ã", "budget": 300000, "actual": 290000, "variance": -3.3}
                        ]
                    }
                ]
            },
            {
                "title": "üìà –î–∏–Ω–∞–º–∏–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π",
                "type": "chart",
                "chart_type": "line",
                "collapsed": False,
                "data": [
                    {"period": "Q1", "revenue": 4200000, "profit": 1100000, "margin": 26.2},
                    {"period": "Q2", "revenue": 4600000, "profit": 1250000, "margin": 27.2},
                    {"period": "Q3", "revenue": 4800000, "profit": 1300000, "margin": 27.1},
                    {"period": "Q4", "revenue": 5200000, "profit": 1400000, "margin": 26.9}
                ]
            },
            {
                "title": "üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
                "type": "table",
                "collapsed": True,
                "data": generate_transaction_data(100)
            }
        ]
    }
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
    renderer = AdvancedExcelRenderer()
    workbook = renderer.create_collapsible_report(financial_data)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    output_file = f"example_2_financial_dashboard_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
    renderer.save_report(output_file)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {output_file}")
    print("üìã –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
    print("  ‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ —Å–≤–æ–¥–∫–µ")
    print("  ‚Ä¢ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π")
    print("  ‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –¥–∏–Ω–∞–º–∏–∫–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π")
    print("  ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–≤–µ—Ä–Ω—É—Ç—ã)")
    
    return output_file


def example_3_sales_analytics():
    """–ü—Ä–∏–º–µ—Ä 3: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏"""
    print("\n" + "="*60)
    print("üõí –ü—Ä–∏–º–µ—Ä 3: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏")
    print("="*60)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂
    sales_data = generate_sales_analytics_data()
    
    sales_report = {
        "title": "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤",
        "subtitle": f"–ê–Ω–∞–ª–∏–∑ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤ | –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M')}",
        "summary": {
            "total_sales": sales_data['total_sales'],
            "unique_customers": sales_data['unique_customers'],
            "avg_order_value": sales_data['avg_order_value'],
            "repeat_customers": sales_data['repeat_customers'],
            "conversion_rate": sales_data['conversion_rate'],
            "customer_lifetime_value": sales_data['customer_lifetime_value']
        },
        "sections": [
            {
                "title": "üåç –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º –∏ –∫–∞–Ω–∞–ª–∞–º",
                "type": "table",
                "collapsed": False,
                "data": sales_data['regional_channel_sales']
            },
            {
                "title": "üë• –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤",
                "type": "grouped_data",
                "collapsed": False,
                "groups": [
                    {
                        "title": "–ü–æ –æ–±—ä–µ–º—É –ø–æ–∫—É–ø–æ–∫",
                        "collapsed": False,
                        "data": sales_data['customer_segments_volume']
                    },
                    {
                        "title": "–ü–æ —á–∞—Å—Ç–æ—Ç–µ –ø–æ–∫—É–ø–æ–∫",
                        "collapsed": True,
                        "data": sales_data['customer_segments_frequency']
                    },
                    {
                        "title": "–ü–æ –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏",
                        "collapsed": True,
                        "data": sales_data['customer_segments_geo']
                    }
                ]
            },
            {
                "title": "üìä –¢—Ä–µ–Ω–¥—ã –ø—Ä–æ–¥–∞–∂ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
                "type": "chart",
                "chart_type": "bar",
                "collapsed": False,
                "data": sales_data['category_trends']
            },
            {
                "title": "üîé –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑–∞–º",
                "type": "table",
                "collapsed": True,
                "data": sales_data['detailed_orders'][:200]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            }
        ]
    }
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
    renderer = AdvancedExcelRenderer()
    workbook = renderer.create_collapsible_report(sales_report)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    output_file = f"example_3_sales_analytics_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
    renderer.save_report(output_file)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {output_file}")
    print("üìã –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
    print("  ‚Ä¢ –ú–Ω–æ–≥–æ–º–µ—Ä–Ω–∞—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤")
    print("  ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø–æ –∫–∞–Ω–∞–ª–∞–º –ø—Ä–æ–¥–∞–∂")
    print("  ‚Ä¢ –¢—Ä–µ–Ω–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ç–æ–≤–∞—Ä–æ–≤")
    print("  ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –∞–≤—Ç–æ—Ñ–∏–ª—å—Ç—Ä–∞–º–∏")
    
    return output_file


def example_4_operational_report():
    """–ü—Ä–∏–º–µ—Ä 4: –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å KPI"""
    print("\n" + "="*60)
    print("‚öôÔ∏è –ü—Ä–∏–º–µ—Ä 4: –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å KPI –∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏")
    print("="*60)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    operational_data = generate_operational_data()
    
    operational_report = {
        "title": "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –∏ KPI",
        "subtitle": f"–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ | {datetime.now().strftime('%d.%m.%Y %H:%M')}",
        "summary": {
            "efficiency_score": operational_data['efficiency_score'],
            "quality_score": operational_data['quality_score'],
            "customer_satisfaction": operational_data['customer_satisfaction'],
            "employee_productivity": operational_data['employee_productivity'],
            "cost_per_unit": operational_data['cost_per_unit'],
            "defect_rate": operational_data['defect_rate']
        },
        "sections": [
            {
                "title": "üìà KPI –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º",
                "type": "table",
                "collapsed": False,
                "data": operational_data['department_kpi']
            },
            {
                "title": "üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏",
                "type": "grouped_data",
                "collapsed": False,
                "groups": [
                    {
                        "title": "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ª–∏–Ω–∏–π",
                        "collapsed": False,
                        "data": operational_data['production_lines']
                    },
                    {
                        "title": "–ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏",
                        "collapsed": True,
                        "data": operational_data['quality_metrics']
                    },
                    {
                        "title": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤",
                        "collapsed": True,
                        "data": operational_data['resource_utilization']
                    }
                ]
            },
            {
                "title": "üìä –¢—Ä–µ–Ω–¥—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
                "type": "chart",
                "chart_type": "line",
                "collapsed": False,
                "data": operational_data['efficiency_trends']
            },
            {
                "title": "‚ö†Ô∏è –ò–Ω—Ü–∏–¥–µ–Ω—Ç—ã –∏ –ø—Ä–æ–±–ª–µ–º—ã",
                "type": "table",
                "collapsed": True,
                "data": operational_data['incidents']
            }
        ]
    }
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
    renderer = AdvancedExcelRenderer()
    workbook = renderer.create_collapsible_report(operational_report)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    output_file = f"example_4_operational_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
    renderer.save_report(output_file)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {output_file}")
    print("üìã –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
    print("  ‚Ä¢ KPI-–¥–∞—à–±–æ—Ä–¥ –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º")
    print("  ‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏")
    print("  ‚Ä¢ –¢—Ä–µ–Ω–¥—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    print("  ‚Ä¢ –ñ—É—Ä–Ω–∞–ª –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
    
    return output_file


def generate_transaction_data(count=100):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"""
    transactions = []
    for i in range(count):
        transactions.append({
            "transaction_id": f"TXN-{10000+i}",
            "date": (datetime.now() - timedelta(days=random.randint(1, 90))).strftime("%d.%m.%Y"),
            "amount": random.randint(1000, 50000),
            "type": random.choice(["–î–æ—Ö–æ–¥", "–†–∞—Å—Ö–æ–¥"]),
            "category": random.choice(["–ü—Ä–æ–¥–∞–∂–∏", "–ó–∞–∫—É–ø–∫–∏", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "–ê—Ä–µ–Ω–¥–∞", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥"]),
            "description": f"–û–ø–µ—Ä–∞—Ü–∏—è {i+1}"
        })
    return transactions


def generate_sales_analytics_data():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    total_sales = 8500000
    unique_customers = 2150
    avg_order_value = 3953
    repeat_customers = 1290
    conversion_rate = 12.5
    customer_lifetime_value = 15600
    
    # –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º –∏ –∫–∞–Ω–∞–ª–∞–º
    regional_channel_sales = [
        {"region": "–ú–æ—Å–∫–≤–∞", "online": 1200000, "retail": 800000, "b2b": 600000, "total": 2600000},
        {"region": "–°–ü–±", "online": 900000, "retail": 600000, "b2b": 400000, "total": 1900000},
        {"region": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "online": 600000, "retail": 400000, "b2b": 300000, "total": 1300000},
        {"region": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "online": 500000, "retail": 350000, "b2b": 250000, "total": 1100000},
        {"region": "–î—Ä—É–≥–∏–µ", "online": 800000, "retail": 500000, "b2b": 300000, "total": 1600000}
    ]
    
    # –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    customer_segments_volume = [
        {"segment": "VIP (>100k)", "customers": 85, "avg_order": 25000, "total_revenue": 2125000},
        {"segment": "–ü—Ä–µ–º–∏—É–º (50-100k)", "customers": 215, "avg_order": 15000, "total_revenue": 3225000},
        {"segment": "–°—Ç–∞–Ω–¥–∞—Ä—Ç (10-50k)", "customers": 860, "avg_order": 3500, "total_revenue": 3010000},
        {"segment": "–ë–∞–∑–æ–≤—ã–π (<10k)", "customers": 990, "avg_order": 1400, "total_revenue": 1386000}
    ]
    
    customer_segments_frequency = [
        {"segment": "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ (>10 –∑–∞–∫–∞–∑–æ–≤)", "customers": 320, "avg_frequency": 15, "retention": 95},
        {"segment": "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ (5-10 –∑–∞–∫–∞–∑–æ–≤)", "customers": 645, "avg_frequency": 7, "retention": 78},
        {"segment": "–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ (2-4 –∑–∞–∫–∞–∑–∞)", "customers": 825, "avg_frequency": 3, "retention": 45},
        {"segment": "–†–∞–∑–æ–≤—ã–µ (1 –∑–∞–∫–∞–∑)", "customers": 360, "avg_frequency": 1, "retention": 12}
    ]
    
    customer_segments_geo = [
        {"region": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –§–û", "customers": 1200, "avg_order": 4200, "penetration": 8.5},
        {"region": "–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π –§–û", "customers": 450, "avg_order": 3800, "penetration": 6.2},
        {"region": "–£—Ä–∞–ª—å—Å–∫–∏–π –§–û", "customers": 300, "avg_order": 3500, "penetration": 4.8},
        {"region": "–°–∏–±–∏—Ä—Å–∫–∏–π –§–û", "customers": 200, "avg_order": 3200, "penetration": 3.1}
    ]
    
    # –¢—Ä–µ–Ω–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    category_trends = [
        {"category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "q1": 1200000, "q2": 1350000, "q3": 1400000, "q4": 1500000},
        {"category": "–û–¥–µ–∂–¥–∞", "q1": 800000, "q2": 900000, "q3": 950000, "q4": 1100000},
        {"category": "–î–æ–º –∏ —Å–∞–¥", "q1": 600000, "q2": 750000, "q3": 800000, "q4": 900000},
        {"category": "–°–ø–æ—Ä—Ç", "q1": 400000, "q2": 500000, "q3": 550000, "q4": 600000},
        {"category": "–ö–Ω–∏–≥–∏", "q1": 200000, "q2": 250000, "q3": 280000, "q4": 320000}
    ]
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    detailed_orders = []
    for i in range(500):
        detailed_orders.append({
            "order_id": f"ORD-{20000+i}",
            "customer_id": f"CUST-{1000+random.randint(1, 2150)}",
            "date": (datetime.now() - timedelta(days=random.randint(1, 180))).strftime("%d.%m.%Y"),
            "amount": random.randint(500, 25000),
            "category": random.choice(["–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "–û–¥–µ–∂–¥–∞", "–î–æ–º –∏ —Å–∞–¥", "–°–ø–æ—Ä—Ç", "–ö–Ω–∏–≥–∏"]),
            "channel": random.choice(["Online", "Retail", "B2B"]),
            "region": random.choice(["–ú–æ—Å–∫–≤–∞", "–°–ü–±", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–î—Ä—É–≥–∏–µ"]),
            "status": random.choice(["–í—ã–ø–æ–ª–Ω–µ–Ω", "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ", "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω", "–û—Ç–º–µ–Ω–µ–Ω"])
        })
    
    return {
        "total_sales": total_sales,
        "unique_customers": unique_customers,
        "avg_order_value": avg_order_value,
        "repeat_customers": repeat_customers,
        "conversion_rate": conversion_rate,
        "customer_lifetime_value": customer_lifetime_value,
        "regional_channel_sales": regional_channel_sales,
        "customer_segments_volume": customer_segments_volume,
        "customer_segments_frequency": customer_segments_frequency,
        "customer_segments_geo": customer_segments_geo,
        "category_trends": category_trends,
        "detailed_orders": detailed_orders
    }


def generate_operational_data():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ KPI
    efficiency_score = 87.5
    quality_score = 94.2
    customer_satisfaction = 4.3
    employee_productivity = 112.8
    cost_per_unit = 245.50
    defect_rate = 0.8
    
    # KPI –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º
    department_kpi = [
        {"department": "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "efficiency": 89, "quality": 96, "cost": 220, "target": 225},
        {"department": "–õ–æ–≥–∏—Å—Ç–∏–∫–∞", "efficiency": 92, "quality": 88, "cost": 45, "target": 50},
        {"department": "–ü—Ä–æ–¥–∞–∂–∏", "efficiency": 85, "quality": 91, "cost": 180, "target": 175},
        {"department": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", "efficiency": 78, "quality": 95, "cost": 120, "target": 115},
        {"department": "R&D", "efficiency": 82, "quality": 98, "cost": 350, "target": 340}
    ]
    
    # –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏
    production_lines = [
        {"line": "–õ–∏–Ω–∏—è A", "capacity": 1000, "actual": 920, "efficiency": 92, "downtime": 8},
        {"line": "–õ–∏–Ω–∏—è B", "capacity": 800, "actual": 760, "efficiency": 95, "downtime": 5},
        {"line": "–õ–∏–Ω–∏—è C", "capacity": 1200, "actual": 1080, "efficiency": 90, "downtime": 10},
        {"line": "–õ–∏–Ω–∏—è D", "capacity": 600, "actual": 540, "efficiency": 90, "downtime": 10}
    ]
    
    # –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
    quality_metrics = [
        {"metric": "–î–µ—Ñ–µ–∫—Ç—ã –Ω–∞ –º–∏–ª–ª–∏–æ–Ω", "value": 850, "target": 1000, "trend": "‚Üì"},
        {"metric": "–ü–µ—Ä–≤—ã–π –ø—Ä–æ—Ö–æ–¥ –∫–∞—á–µ—Å—Ç–≤–∞", "value": 96.5, "target": 95, "trend": "‚Üë"},
        {"metric": "–í–æ–∑–≤—Ä–∞—Ç—ã –∫–ª–∏–µ–Ω—Ç–æ–≤", "value": 0.3, "target": 0.5, "trend": "‚Üì"},
        {"metric": "–í—Ä–µ–º—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–æ–≤", "value": 2.1, "target": 3, "trend": "‚Üì"}
    ]
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
    resource_utilization = [
        {"resource": "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ", "utilization": 87, "capacity": 100, "efficiency": 92},
        {"resource": "–ü–µ—Ä—Å–æ–Ω–∞–ª", "utilization": 95, "capacity": 100, "efficiency": 88},
        {"resource": "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "utilization": 78, "capacity": 85, "efficiency": 94},
        {"resource": "–≠–Ω–µ—Ä–≥–∏—è", "utilization": 82, "capacity": 90, "efficiency": 89}
    ]
    
    # –¢—Ä–µ–Ω–¥—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    efficiency_trends = []
    for i in range(12):
        month = (datetime.now() - timedelta(days=30*(11-i))).strftime("%B")
        efficiency_trends.append({
            "month": month,
            "efficiency": random.uniform(80, 95),
            "quality": random.uniform(90, 98),
            "cost": random.uniform(200, 300)
        })
    
    # –ò–Ω—Ü–∏–¥–µ–Ω—Ç—ã
    incidents = []
    for i in range(30):
        incidents.append({
            "incident_id": f"INC-{3000+i}",
            "date": (datetime.now() - timedelta(days=random.randint(1, 60))).strftime("%d.%m.%Y"),
            "type": random.choice(["–ö–∞—á–µ—Å—Ç–≤–æ", "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ", "–ü—Ä–æ—Ü–µ—Å—Å"]),
            "severity": random.choice(["–ù–∏–∑–∫–∞—è", "–°—Ä–µ–¥–Ω—è—è", "–í—ã—Å–æ–∫–∞—è", "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è"]),
            "status": random.choice(["–û—Ç–∫—Ä—ã—Ç", "–í —Ä–∞–±–æ—Ç–µ", "–†–µ—à–µ–Ω", "–ó–∞–∫—Ä—ã—Ç"]),
            "department": random.choice(["–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "–õ–æ–≥–∏—Å—Ç–∏–∫–∞", "–ö–∞—á–µ—Å—Ç–≤–æ", "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"])
        })
    
    return {
        "efficiency_score": efficiency_score,
        "quality_score": quality_score,
        "customer_satisfaction": customer_satisfaction,
        "employee_productivity": employee_productivity,
        "cost_per_unit": cost_per_unit,
        "defect_rate": defect_rate,
        "department_kpi": department_kpi,
        "production_lines": production_lines,
        "quality_metrics": quality_metrics,
        "resource_utilization": resource_utilization,
        "efficiency_trends": efficiency_trends,
        "incidents": incidents
    }


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤")
    print("="*60)
    
    examples = [
        example_1_basic_complex_report,
        example_2_financial_dashboard,
        example_3_sales_analytics,
        example_4_operational_report
    ]
    
    created_files = []
    
    for example_func in examples:
        try:
            output_file = example_func()
            created_files.append(output_file)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {example_func.__name__}: {e}")
    
    print("\n" + "="*60)
    print("üìã –ò–¢–û–ì–ò –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò")
    print("="*60)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(created_files)}")
    for file in created_files:
        print(f"  ‚Ä¢ {file}")
    
    print("\nüéØ –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
    print("  ‚Ä¢ –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã–µ —Å–µ–∫—Ü–∏–∏ —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏")
    print("  ‚Ä¢ –ê–≤—Ç–æ—Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü")
    print("  ‚Ä¢ –£—Å–ª–æ–≤–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("  ‚Ä¢ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫")
    print("  ‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏")
    print("  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("  ‚Ä¢ –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –æ–±–ª–∞—Å—Ç–µ–π")
    print("  ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ Jinja2")


if __name__ == "__main__":
    main() 